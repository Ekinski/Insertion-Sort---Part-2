using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the insertionSort2 function below.
    static void insertionSort2(int n, int[] arr) {
        int[] answer = new int[n];
        int num = 0;
        int exchange = 0; 
        int backNum = 0;
        for (int b = 0; b < n -1; b++){
            //if the previous number is higher then the next number eg: 8 > 9     
            if (arr[b] > arr[b+1]){
                num = arr[b+1]; // switching numbers 
                exchange = arr[b];
               
               // checking how far to bring the number back (num - smaller int)
                for (int c = b; c >= 0; c--){
                    if (num < arr[c] ){
                        arr[c+1] = arr[c];
                        arr[c] = num;
                    } 
                    
                }  
            }
        //prints out number
        for ( int a = 0; a < n; a++){
            answer[a] = arr[a];
            Console.Write(answer[a] + " ");
        }
            Console.WriteLine("");
        }
    }

    static void Main(string[] args) {
        int n = Convert.ToInt32(Console.ReadLine());

        int[] arr = Array.ConvertAll(Console.ReadLine().Split(' '), arrTemp => Convert.ToInt32(arrTemp))
        ;
        insertionSort2(n, arr);
    }
}
